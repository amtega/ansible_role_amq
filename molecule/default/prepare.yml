---

- name: Prepare testing hosts
  hosts: molecule_hosts
  gather_facts: no
  become: yes
  tasks:
    - name: Install python for ansible
      raw: >-
        test -e /usr/bin/python
        || (apt -y update && apt install -y python-minimal)
      changed_when: no
      when: yes

    - name: Match vagrant vm name to inventory
      hostname:
        name: "{{ inventory_hostname }}"

    - name: Remove loopback (/etc/hosts)
      lineinfile:
        path: /etc/hosts
        state: absent
        regexp: '^127\.0\.0\.1'
        line:
        owner: root
        group: root
        mode: "0644"
        backup: yes

    - name: Add master and slave to DNS (/etc/hosts) HARDCODED
      lineinfile:
        path: /etc/hosts
        line: "{{ item }}"
        owner: root
        group: root
        mode: "0644"
        backup: yes
      loop:
        - "{{ test_master_ip }} master-{{ instance_uuid }}"
        - "{{ test_slave_ip }} slave-{{ instance_uuid }}"

- name: Prepare nfs server
  hosts: molecule_hosts_nfs_servers
  become: yes
  tasks:
    - name: Setup packages
      yum:
        state: present
        name:
          - nfs-utils
          - rpcbind

    - name: Setup /etc/exports
      lineinfile:
        path: /etc/exports
        line: "{{ test_nfs_directory }} *(rw,sync,no_root_squash,no_all_squash)"
        create: yes

    - name: Setup nfs shared directory
      file:
        path: "{{ test_nfs_directory }}"
        state: directory
        mode: "755"
        owner: nobody
        group: nobody

    - name: Start and enable service
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop:
        - rpcbind
        - nfs-server
        - nfs-lock
        - nfs-idmap

    - name: Restart service nfs-server
      systemd:
        name: nfs-server
        state: restarted


- name: Prepare amq cluster hosts
  hosts: molecule_hosts_amq_cluster
  become: yes
  tasks:
    - name: Setup packages
      yum:
        state: present
        name:
          - "{{ test_java_package }}"
          - nfs-utils

    - name: "Ensure group {{ amq_group }} exists"
      group:
        name: "{{ amq_group }}"
        state: present

    - name: "Ensure user {{ amq_user }} exists"
      user:
        name: "{{ amq_user }}"
        group: "{{ amq_group }}"

    - name: Clean amq if installed
      import_tasks: prepare_clean.yml

    # HACK: Need mount point, made in advance.
    #       Same as tasks/install/data_dir.yml
    - name: Setup data directory
      file:
        path: "{{ amq_broker_data_dir }}"
        owner: "{{ amq_user }}"
        group: "{{ amq_group }}"
        mode: u=rwx,g=rwx,o=
        state: directory
        recurse: yes

    - name: Mount shared nfs directory
      mount:
        path: "{{ amq_broker_data_dir }}"
        src: "{{ test_nfs_share }}"
        fstype: nfs
        opts: rw
        state: mounted
